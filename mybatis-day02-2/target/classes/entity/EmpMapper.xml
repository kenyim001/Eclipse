<?xml version="1.0" encoding="UTF-8" ?>  
<!DOCTYPE mapper PUBLIC "-//ibatis.apache.org//DTD Mapper 3.0//EN"      
 "http://ibatis.apache.org/dtd/ibatis-3-mapper.dtd">

<mapper namespace="dao.EmployeeDAO">
	<!--id要求唯一 parameterType:参数类型，这里填写实体类的完整的名字 -->
	<insert id="save" parameterType="entity.Employee">
		insert into t_emp_yjh values(t_emp_yjh_id.nextval,#{name},#{salary},#{age})
	</insert>
	<select id="findAll" resultType="entity.Employee">
		select * from t_emp_yjh
	</select>
	<select id="findById" parameterType="int" resultType="entity.Employee">
		select * from t_emp_yjh where id=#{id1}
	</select>
	<update id="modify" parameterType="entity.Employee">
		update t_emp_yjh set name=#{name},salary=#{salary},age=#{age}where id=#{id}
	</update>
	<delete id="delete" parameterType="int">
		delete from t_emp_yjh where id=#{id1}
	</delete>
	<!-- 返回Map类型的结果 -->
	<!-- Map是java.util.map的简写形式 -->
	<select id="findById2" parameterType="int" resultType="map">
		select * from t_emp_yjh where id=#{id1}
	</select>
	
	<!-- 设置实体类的属性名与表的字段名的对应关系 只需要将不一致的列出来-->
	<resultMap type="entity.Emp" id="empResultMap">
		<result property="empNo" column="id"/>
		<result property="ename" column="name"/>
	</resultMap>
	
	<select id="findById3" parameterType="int" resultMap="empResultMap">
		select * from t_emp_yjh where id=#{id1}
	</select>
</mapper>